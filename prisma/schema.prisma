generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ROLE {
  USER
  ADMIN
}

model User {
  id                   String    @id @default(uuid())
  username             String    @unique
  firstName            String
  lastName             String
  email                String    @unique
  verifyCode           String
  isVerified           Boolean   @default(false)
  verifyCodeExpiryDate DateTime
  password             String
  address              String?
  role                 ROLE      @default(USER)
  createdAt            DateTime  @default(now())
  products             Product[]
  orders               Order[]
}

model Product {
  id            String             @id @default(uuid())
  description   String
  img           String
  name          String
  price         Float
  category      ProductCategory    @relation(fields: [categoryId], references: [id])
  subCategory   ProductSubCategory @relation(fields: [subCategoryId], references: [id])
  categoryId    String
  subCategoryId String
  otherImg      String[]           @db.Text
  style         String
  colorWay      String
  releaseDate   DateTime?
  userId        String?
  User          User?              @relation(fields: [userId], references: [id])
  orders        Order[]

  @@index([categoryId])
  @@index([subCategoryId])
  @@index([userId])
}

model ProductCategory {
  id       String    @id @default(uuid())
  name     String    @unique
  products Product[]
}

model ProductSubCategory {
  id       String    @id @default(uuid())
  name     String    @unique
  products Product[]
}

model Payment {
  id            String  @id @default(uuid())
  method        String
  status        String
  transactionId String
  orders        Order[]
}

model Order {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  payment   Payment  @relation(fields: [paymentId], references: [id])
  paymentId String
  orderDate DateTime
  status    String
  // tracking  TrackingDetail[]
}

// model TrackingDetail {
//   id                String   @id @default(uuid())
//   order             Order    @relation(fields: [orderId], references: [id])
//   orderId           String
//   trackingNumber    String
//   status            String
//   estimatedDelivery DateTime
// }
